@model GarmentsAdminApp.ViewModel.ProductViewModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create</h2>

@using (Html.BeginForm("Create", "Product", null, FormMethod.Post,
                              new { enctype = "multipart/form-data" })) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Product</legend>
        <table >
            <tr>
                <td>
                   
                    <div class="editor-label">
            @Html.LabelFor(model => model.product.Name)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.product.Name)
            @Html.ValidationMessageFor(model => model.product.Name)
        </div>
                </td>
                <td>
 <div class="editor-label">
            @Html.LabelFor(model => model.product.Description)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.product.Description)
            @Html.ValidationMessageFor(model => model.product.Description)
        </div>
                </td>
            </tr>
            <tr>
                <td>
 <div >
             @*@Html.Label("Main Category") *@
            @Html.LabelFor(model => model.ParentCatId, "Main Category")
        </div>
        <div class="editor-field">
            @*@Html.DropDownList("MainCategoryId", String.Empty)*@
            @Html.DropDownListFor(model => model.ParentCatId, new SelectList (ViewBag.MainCategoryId, "Value","Text"), "Main Category", new { @class="text1",  @id="MainCategoryId"} )
            @Html.ValidationMessageFor(model => model.ParentCatId)
            
        </div>
                </td>
                <td>
<div class="editor-label">
            @Html.LabelFor(model => model.product.CategoryId, "Sub Category")

        </div>
        <div class="editor-field">
            @*@Html.DropDownList("SubCategoryId", String.Empty)*@
            @Html.DropDownListFor(model => model.product.CategoryId , new SelectList (ViewBag.SubCategoryId, "Value","Text"), "Sub Category", new { @class="text1",  @id="SubCategoryId"} )
            @Html.ValidationMessageFor(model => model.product.CategoryId)
        </div>
                </td>
            </tr>
            <tr>
                <td colspan ="2">
<div class="editor-label">
            @Html.LabelFor(model => model.product.Image)
        </div>
        <div class="editor-field">
            @*@Html.EditorFor(model => model.product.Image)*@
            <input id="Image" title="Upload a product image" 
                                  type="file" name="file" />
            @Html.ValidationMessageFor(model => model.product.Image)
        </div>
                    
        <div class="editor-field">
            
        </div>
                </td>
            </tr>
            <tr>
                <td colspan ="2">
                    <div class="editor-label">
            @Html.LabelFor(model => model.product.Price)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.product.Price)
            @Html.ValidationMessageFor(model => model.product.Price)
        </div>
                </td>
            </tr>
        </table>
        <p>
            <input type="submit" value="Create" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<script src="~/Scripts/jquery-1.9.1.min.js"></script>
<script type="text/javascript">

$(document).ready(function () {

    $("#SubCategoryId").change(function () {
        $.ajax({
            type: 'POST',
            url: '@Url.Action("GetSubCategoriesID")',
            dataType: 'json',
            data: {
                CategoryId: $("#SubCategoryId").val()
                
            },
            success: function (subcategories) {
                this.Product.CategoryId = $("#SubCategoryId").val();
                //$.each(subcategories, function (i, subcategory) {
                //    $("#SubCategory").append('<option value="'
                //        + subcategory.Value + '">' +
                //        subcategory.Text + '</option>');
                //});
            },
            error: function (ex) {
                alert('Failed to retrieve Sub Categories : ' + ex);
            }
        });
        return false;
    });

    $("#MainCategoryId").change(function () {
        $("#SubCategoryId").empty();
        $.ajax({
            type: 'POST',
            url: '@Url.Action("GetSubCategories")',
            dataType: 'json',
            data: { parentCatId: $("#MainCategoryId").val() },
            success: function (subcategories) {
                $.each(subcategories, function (i, subcategory) {
                    $("#SubCategoryId").append('<option value="'
                        + subcategory.Value + '">' +
                        subcategory.Text + '</option>');
                });
            },
            error: function (ex) {
                alert('Failed to retrieve Main Categories : ' + ex);
            }
        });
         return false;
     })
    
});
</script>